---
title: "Pivots Part 2"
engine: knitr
format: live-html
webr:
  packages:
    - tidyverse
    - gradethis
  render-df: paged-table
live:
  show-hints: true
---

{{< include ./_extensions/r-wasm/live/_knitr.qmd >}}
{{< include ./_extensions/r-wasm/live/_gradethis.qmd >}}

```{webr}
#| include: false
starwars <- starwars

keepers <-  c("Human", "Droid", "Gungan")

characters <- starwars |> 
  drop_na(sex, gender) |> 
  mutate(species_clean = case_when(
    !(species %in% keepers) ~ "Other",
    is.na(species) ~ "Other",
    .default = species
  )) |> 
  select(
    -species,
    species = species_clean
  ) |> 
  count(species, gender)

gender_table <- characters |> 
  pivot_wider(names_from = gender, values_from = n)
```


## Making longer data

Now that you have mastered, pivoting wider, can you go back the other way?

Starting with our first widened table, which will be in a tibble called `gender_table`.

```{webr}
#| edit: FALSE
#| echo: FALSE
gender_table
```

can you convert the data back to its original form, to this?

```{webr}
#| edit: FALSE
#| echo: FALSE
characters
```


::: callout-warning

Part of pivot_longer() requires you to specify which columns will be pivoted to rows, but this can be specified in any number of ways. Our droid code checker is not as smart as you are, though, so you need to specify those in a very specific way.

Set the value to: `feminine:masculine`

:::

Use what you've learned young padawan!

```{webr}
#| exercise: ex_1
gender_table |> 
  pivot_______(
    cols = ________:_________,
    ______to = "gender",
    _______to = "n"
  )
```


::: {.solution exercise="ex_1"}
::: {.callout-note collapse="false"}

### Solution

```{webr}
#| exercise: ex_1
#| solution: true
gender_table |> 
  pivot_longer(
    cols = feminine:masculine,
    names_to = "gender",
    values_to = "n"
  )
```

:::
:::

```{webr}
#| exercise: ex_1
#| check: true
grade_this_code()
```

::: {.hint exercise="ex_1"}
::: {.callout-note collapse="false"}

### Hint

Note the warning above that you have to specify the `cols = ` argument in a very specific way.

Beyond that, perhaps check the [`pivot_longer()`](https://tidyr.tidyverse.org/reference/pivot_longer.html) arguments of the [pivot vignette](https://tidyr.tidyverse.org/articles/pivot.html#longer).

:::
:::


{{< include /trials/part-end.qmd >}}
